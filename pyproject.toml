# Default tool config file. See also setup.cfg for tools that don't yet
# support pyproject.toml.

[tool.black]
line-length = 88
target_version = ['py37']
skip-string-normalization = true
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | __pycache__
  | buck-out
  | build
  | dist
  | node_modules
  | funnel/assets
)/
'''

[tool.curlylint]
include = '\.html.jinja2$'
template_tags = [['set'], ['trans', 'pluralize', 'endtrans']]
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | __pycache__
  | buck-out
  | build
  | dist
  | node_modules
  | funnel/assets
)/
'''

[tool.curlylint.rules]
# All role attributes must be valid.
# See https://www.curlylint.org/docs/rules/aria_role
aria_role = true
# HTML lang attribute must be set
# See https://www.curlylint.org/docs/rules/html_has_lang
html_has_lang = true
# The `alt` attribute must be present.
# See https://www.curlylint.org/docs/rules/image_alt
image_alt = true
# Indent 2 spaces
# See https://www.curlylint.org/docs/rules/indent
# Enable after issue 6 is fixed: https://github.com/thibaudcolas/curlylint/issues/6
# indent = 2
# Avoid positive `tabindex` values
tabindex_no_positive = true

[tool.isort]
profile = 'black'
multi_line_output = 3
include_trailing_comma = true
line_length = 88
order_by_type = true
use_parentheses = true
from_first = true
# add_imports = 'from __future__ import annotations'
known_future_library = ['__future__', 'six']
known_first_party = ['baseframe', 'coaster', 'funnel']
known_sqlalchemy = ['alembic', 'sqlalchemy', 'sqlalchemy_utils', 'flask_sqlalchemy', 'psycopg2']
known_flask = [
  'flask',
  'click',
  'werkzeug',
  'itsdangerous',
  'wtforms',
  'webassets',
  'flask_assets',
  'flask_babelhg',
  'flask_executor',
  'flask_flatpages',
  'flask_mailman',
  'flask_migrate',
  'flask_redis',
  'flask_rq2',
]
default_section = 'THIRDPARTY'
sections = ['FUTURE', 'STDLIB', 'SQLALCHEMY', 'FLASK', 'THIRDPARTY', 'FIRSTPARTY', 'LOCALFOLDER']

[tool.pytest.ini_options]
addopts = ['--cov-report=term-missing']
filterwarnings = ['ignore::DeprecationWarning', 'ignore::UserWarning']
mocked-sessions = 'coaster.db.db.session'
env_files = ['.env', '.env.testing']

[tool.pyright]
venv = 'hasgeek'

reportMissingImports = true
reportMissingTypeStubs = false

pythonVersion = '3.7'

[tool.mypy]
files = '**/*.py'
exclude = 'node_modules'
plugins = ['sqlmypy']
ignore_missing_imports = true
show_error_codes = true
warn_unreachable = true
warn_unused_ignores = true
warn_redundant_casts = false

[tool.pylint.master]
load-plugins = ['pylint_pytest', 'pylint_flask_sqlalchemy']
max-parents = 10
init-hook = "import os; sys.path.append(os.getcwd())"

[tool.pylint.message_control]
max-line-length = 88
disable = [
  'comparison-with-callable',  # Pylint is confused by SQLAlchemy attributes
  'cyclic-import',  # We have tail imports all over
  'duplicate-code',  # Too many false positives
  'fixme',  # Our workflow is to tag for future fixes
  'invalid-name',  # Flake8 covers our naming convention requirements
  'no-member',  # Pylint gets confused over how some members become part of an instance
  'no-self-use',  # Views and overriden methods don't necessarily use `self`
  'too-few-public-methods',  # Data classes and validator classes have few methods
  'too-many-instance-attributes',  # Some instances are just bags of attributes
  'too-many-lines',  # We have large files that include all related functionality
  'unused-argument',  # Arguments required for spec compatibility aren't always used
]

[tool.bandit]
exclude_dirs = ['node_modules']

[tool.bandit.assert_used]
skips = ['*/*_test.py', '*/test_*.py']
