"""Add boxoffice data to account

Revision ID: 3b3381c07d4d
Revises: 4f9ca10b7b9d
Create Date: 2023-09-07 18:55:51.264615

"""

from typing import Optional, Tuple, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '3b3381c07d4d'
down_revision: str = '4f9ca10b7b9d'
branch_labels: Optional[Union[str, Tuple[str, ...]]] = None
depends_on: Optional[Union[str, Tuple[str, ...]]] = None


def upgrade(engine_name: str = '') -> None:
    """Upgrade all databases."""
    # Do not modify. Edit `upgrade_` instead
    globals().get(f'upgrade_{engine_name}', lambda: None)()


def downgrade(engine_name: str = '') -> None:
    """Downgrade all databases."""
    # Do not modify. Edit `downgrade_` instead
    globals().get(f'downgrade_{engine_name}', lambda: None)()





def upgrade_() -> None:
    """Upgrade default database."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('account', schema=None) as batch_op:
        batch_op.add_column(sa.Column('boxoffice_data', sa.JSON().with_variant(postgresql.JSONB(astext_type=sa.Text()), 'postgresql'), server_default=sa.text("'{}'::jsonb"), nullable=False))

    # ### end Alembic commands ###


def downgrade_() -> None:
    """Downgrade default database."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('account', schema=None) as batch_op:
        batch_op.drop_column('boxoffice_data')

    # ### end Alembic commands ###

