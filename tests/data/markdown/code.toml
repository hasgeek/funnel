[data]
markdown = "## Code\n\n### Inline `code`\n\n### Indented code\n\n    // Some comments\n    line 1 of code\n    line 2 of code\n    line 3 of code\n\n\n### Block code \"fences\"\n\n```\nSample text here...\nIt is a sample text that has multiple lines\n```\n\n### Syntax highlighting\n\n#### Javascript\n```js\nvar foo = function (bar) {\n  return bar++;\n};\n\nconsole.log(foo(5));\nconsole.log('`This should be printed`');\n```\n> Javascript can be highlighted by using either of the two keywords `js` and `javascript`\n\n#### Python\n```python\nimport os\nfrom funnel.utils.markdown import DATAROOT, markdown\n\nif os.file.path.exists(\n    os.file.path.join(\n        DATAROOT,\n        'file',\n        'path'\n    )\n):\n    markdown('# I can output ``` also with a \\!')\n```\n\n#### Markdown\n```markdown\n*I can also type markdown code blocks.*\nIsn't that **fantastic**!\n\n- This is a list\n  - Just testing\n  - this out\n\n[hasgeek](https://hasgeek.com)\n```\n\n"

[config]
configs = [ "default", "no_ext",]

[results]
default = "<h2 id=\"h:code\">Code <a class=\"header-anchor\" href=\"#h:code\">¶</a></h2>\n<h3 id=\"h:inline-code\">Inline <code>code</code> <a class=\"header-anchor\" href=\"#h:inline-code\">¶</a></h3>\n<h3 id=\"h:indented-code\">Indented code <a class=\"header-anchor\" href=\"#h:indented-code\">¶</a></h3>\n<pre><code>// Some comments\nline 1 of code\nline 2 of code\nline 3 of code\n</code></pre>\n<h3 id=\"h:block-code-fences\">Block code “fences” <a class=\"header-anchor\" href=\"#h:block-code-fences\">¶</a></h3>\n<pre><code>Sample text here...\nIt is a sample text that has multiple lines\n</code></pre>\n<h3 id=\"h:syntax-highlighting\">Syntax highlighting <a class=\"header-anchor\" href=\"#h:syntax-highlighting\">¶</a></h3>\n<h4>Javascript</h4>\n<pre><code class=\"language-js\">var foo = function (bar) {\n  return bar++;\n};\n\nconsole.log(foo(5));\nconsole.log('`This should be printed`');\n</code></pre>\n<blockquote>\n<p>Javascript can be highlighted by using either of the two keywords <code>js</code> and <code>javascript</code></p>\n</blockquote>\n<h4>Python</h4>\n<pre><code class=\"language-python\">import os\nfrom funnel.utils.markdown import DATAROOT, markdown\n\nif os.file.path.exists(\n    os.file.path.join(\n        DATAROOT,\n        'file',\n        'path'\n    )\n):\n    markdown('# I can output ``` also with a \\!')\n</code></pre>\n<h4>Markdown</h4>\n<pre><code class=\"language-markdown\">*I can also type markdown code blocks.*\nIsn't that **fantastic**!\n\n- This is a list\n  - Just testing\n  - this out\n\n[hasgeek](https://hasgeek.com)\n</code></pre>"
no_ext = "<h2>Code</h2>\n<h3>Inline <code>code</code></h3>\n<h3>Indented code</h3>\n<pre><code>// Some comments\nline 1 of code\nline 2 of code\nline 3 of code\n</code></pre>\n<h3>Block code “fences”</h3>\n<pre><code>Sample text here...\nIt is a sample text that has multiple lines\n</code></pre>\n<h3>Syntax highlighting</h3>\n<h4>Javascript</h4>\n<pre><code class=\"language-js\">var foo = function (bar) {\n  return bar++;\n};\n\nconsole.log(foo(5));\nconsole.log('`This should be printed`');\n</code></pre>\n<blockquote>\n<p>Javascript can be highlighted by using either of the two keywords <code>js</code> and <code>javascript</code></p>\n</blockquote>\n<h4>Python</h4>\n<pre><code class=\"language-python\">import os\nfrom funnel.utils.markdown import DATAROOT, markdown\n\nif os.file.path.exists(\n    os.file.path.join(\n        DATAROOT,\n        'file',\n        'path'\n    )\n):\n    markdown('# I can output ``` also with a \\!')\n</code></pre>\n<h4>Markdown</h4>\n<pre><code class=\"language-markdown\">*I can also type markdown code blocks.*\nIsn't that **fantastic**!\n\n- This is a list\n  - Just testing\n  - this out\n\n[hasgeek](https://hasgeek.com)\n</code></pre>"
