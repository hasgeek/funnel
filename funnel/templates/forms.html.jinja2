{%- from "macros.html.jinja2" import alertbox, faicon -%}

{% macro rendererrors(field) -%}
    {%- if field.errors -%}
      {%- for error in field.errors %}
        <div><p class="mui-form__error">{{ error }}</p></div>
      {%- endfor %}
    {%- endif %}
{%- endmacro %}

{% macro renderfield(field, css_class="", widget_css_class="", sidetext=none, tabindex=none, autofocus=false, nolabel=false, style="horiz", rows=none, placeholder=none) -%}
  {%- if field.widget.html_tag in ['ul', 'ol'] %}
    {%- set listwidget = true %}
  {%- elif field.widget.input_type == 'checkbox' %}
    {%- set listwidget = false %}
  {%- else %}
    {%- set listwidget = false %}
  {%- endif -%}
  {%- if field.type == 'FormField' %}
    <fieldset>
      <legend>{{ field.label.text }}</legend>
      {%- for subfield in field.form %}
        {%- if not subfield.type in ['CSRFTokenField', 'HiddenField', 'NonceField'] -%}
          {{ renderfield(field=subfield, css_class=css_class, widget_css_class=widget_css_class, sidetext=sidetext, tabindex=tabindex, autofocus=false, nolabel=nolabel, style=style, rows=rows, placeholder=placeholder) }}
        {%- endif %}
      {%- endfor %}
    </fieldset>
  {%- else %}
    <div class="mui-form__fields {%- if field.errors %} error has-error {%- endif -%}
        {%- if css_class %} {{ css_class }} {%- endif -%}
        {%- if listwidget %} listwidget {%- if style == 'horizlist' %} horizlist {%- endif %}{%- endif -%}
        " id="field-{{ field.id }}">
      {%- if field.type == 'RadioMatrixField' %}
        <div class="mui-form__controls">
          {{ field | render_field_options(class="field-" + field.id + " " + widget_css_class) }}
          {%- if field.description %}
             <p class="mui-form__helptext">{{ field.description }}</p>
          {%- endif %}
        </div>
      {%- elif field.type == 'BooleanField' %}
        <div class="mui-form__controls">
          <div class="mui-checkbox">
            <label>
              {{ field | render_field_options(class="field-" + field.id + " " + widget_css_class, tabindex=tabindex, rows=rows, placeholder=placeholder) }} {{ field.label.text }}
              {{ rendererrors(field) }}
            </label>
          </div>
          {%- if field.description %}
            <p class="mui-form__helptext">{{ field.description }}</p>
          {%- endif %}
        </div>
      {%- else %}
        <div class="mui-form__controls">
          {%- if field.type in ['AnnotatedTextField', 'AnnotatedNullTextField'] %}
            <div class="mui-textfield mui-textfield--addon">
              {% if field.prefix %}<span class="mui-form__addon">{{ field.prefix }}</span>{% endif %}
              {{ field | render_field_options(class="field-" + field.id + " " + widget_css_class, tabindex=tabindex, autofocus=autofocus, rows=rows, placeholder=placeholder)}}
              {% if field.suffix %}<span class="mui-form__addon">{{ field.suffix }}</span>{% endif %}
              {%- if not nolabel %}
                <label for="{{ field.id }}">{{ field.label.text }}</label>
              {%- endif %}
            </div>
          {%- elif field.type == 'CoordinatesField' %}
            <div class="map">
              <div class="mui-textfield no-jshidden">
                <input type="text" class="map__search-field" id="{{ field.id }}_search" placeholder="Enter a location" />
                <a href="#" onclick="return false;" id="{{ field.id }}_clear" class="map__clear" aria-label="clear location">{{ faicon(icon='times', icon_size='title') }}</a>
                {%- if not nolabel %}
                  <label for="{{ field.id }}">{{ field.label.text }}</label>
                {%- endif %}
              </div>
              <div id="{{ field.id }}_map" class="no-jshidden map__marker"></div>
              <div class="jshidden">{{ field(class="field-" + field.id + " form-control") }}</div>
            </div>
          {%- elif field.widget.input_type in ['text', 'email', 'search', 'url', 'number', 'tel'] and field.widget.html_tag not in ['ul', 'ol'] %}
            <div class="mui-textfield mui-textfield--float-label">
              {{ field | render_field_options(class="field-" + field.id + " " + widget_css_class, tabindex=tabindex, autofocus=autofocus, rows=rows, placeholder=placeholder)}}
              {%- if not nolabel %}
                <label for="{{ field.id }}">{{ field.label.text }}</label>
              {%- endif %}
              <div class="tabs keyboard-switch">
                <a href="#" onclick="return false;" class="tabs__item tabs__item--active mui--text-caption js-keyboard-switcher mui--hidden-md mui--hidden-lg mui--hidden-xl nounderline" data-inputmode="email">Use email address</a>
                <a href="#" onclick="return false;" class="tabs__item mui--text-caption js-keyboard-switcher mui--hidden-md mui--hidden-lg mui--hidden-xl nounderline" data-inputmode="tel">Use phone number</a>
              </div>
            </div>
          {%- elif field.type == 'ImgeeField' %}
            <div class="imgee">
              {{ field | render_field_options(class="field-" + field.id + " " + widget_css_class, tabindex=tabindex, autofocus=autofocus, rows=rows, placeholder=placeholder) }}
            </div>
          {%- elif field.widget.input_type == 'password' and field.widget.html_tag not in ['ul', 'ol'] %}
            <div class="mui-textfield mui-textfield--password mui-textfield--float-label">
              {{ field | render_field_options(class="field-" + field.id + " " + widget_css_class, tabindex=tabindex, autofocus=autofocus, rows=rows, placeholder=placeholder)}}
              <a href="#" onclick="return false;" class="js-show-password js-password-toggle password-toggle" aria-label="show password"tabindex="-1">{{ faicon(icon='eye', icon_size='title', css_class="mui--text-light") }}</a>
              <a href="#" onclick="return false;" class="js-hide-password js-password-toggle password-toggle mui--hide" aria-label="hide password" tabindex="-1">{{ faicon(icon='eye-slash', icon_size='title', css_class="mui--text-light") }}</a>
              {%- if not nolabel %}
                <label for="{{ field.id }}">{{ field.label.text }}</label>
              {%- endif %}
              <div class="password-strength">
                <span class="password-strength-icon js-password-weak">{{ faicon(icon='times', icon_size='title', baseline=false, css_class="mui--text-danger") }}</span>
                <span class="password-strength-icon js-password-good">{{ faicon(icon='check', icon_size='title', baseline=false, css_class="mui--text-success") }}</span>
                <div class="progress">
                  <div class="progress__bar">
                    <span class="progress__txt mui--text-body2"></span>
                  </div>
                </div>
              </div>
            </div>
          {%- elif field.widget.input_type in ['color', 'date', 'datetime', 'datetime-local', 'month', 'time', 'week'] and field.widget.html_tag not in ['ul', 'ol'] %}
            <div class="mui-textfield">
              {{ field | render_field_options(class="field-" + field.id + " " + widget_css_class, tabindex=tabindex, autofocus=autofocus, rows=rows, placeholder=placeholder)}}
              {%- if not nolabel %}
                <label for="{{ field.id }}">{{ field.label.text }}</label>
              {%- endif %}
            </div>
          {%- elif field.type in ['SelectField', 'QuerySelectField', 'SelectMultipleField', 'QuerySelectMultipleField', 'UserSelectField', 'UserSelectMultiField', 'AutocompleteField', 'AutocompleteMultipleField', 'GeonameSelectField', 'GeonameSelectMultiField', 'ProfileSelectField'] and field.widget.html_tag not in ['ul', 'ol'] %}
            <div class="mui-select">
              {{ field | render_field_options(class="field-" + field.id + " " + widget_css_class, tabindex=tabindex, autofocus=autofocus, rows=rows, placeholder=placeholder)}}
              <label for="{{ field.id }}">{{ field.label.text }}</label>
            </div>
          {%- else %}
            <div class="mui-textfield">
              {%- if not nolabel %}<label for="{{ field.id }}" class="mui-form__label">{{ field.label.text }}</label>{%- endif %}
              {{ field | render_field_options(class="field-" + field.id + " " + widget_css_class, tabindex=tabindex, autofocus=autofocus, rows=rows, placeholder=placeholder)}}
            </div>
          {%- endif %}
          {%- if sidetext %}
            <span class="mui-form__sidetext">{{ sidetext }}</span>
          {%- endif %}
          {{ rendererrors(field) }}
          {%- if field.description %}
            <p class="mui-form__helptext">{{ field.description }}</p>
          {%- endif %}
        </div>
      {%- endif %}
    </div>
  {%- endif %}
{%- endmacro %}

{# djlint: off #}{% macro rendersubmit(buttons=[], css_class="", tabindex='', cancel_url='', style="horiz", csrf_error=false) -%}{# djlint:on #}
<div class="mui-form form-actions mui--clearfix{% if css_class %} {{ css_class }}{% endif %}">
  <div>
    {% for name, value, widget_class in buttons -%}
      <button type="submit"
        {%- if name %} name="{{ name|e }}"{% else %} {% endif -%}
        class="mui-btn mui-btn--raised {% if widget_class %} {{ widget_class|e }}{% else %} mui-btn--primary{% endif -%}"
        {%- if tabindex %} tabindex="{{ tabindex }}" {% endif -%}
        data-cy="form-submit-btn"
        >{{ value|e }}</button>
    {% endfor %}
    {% if cancel_url %}<a href="{{ cancel_url }}" class="mui-btn mui-btn--raised mui-btn" data-cy="form-cancel-btn">{% trans %}Cancel{% endtrans %}</a>{% endif %}
    <span class="loading mui--hide">&nbsp;</span>
    {% if csrf_error -%}
      <div>
        <p class="mui-form__error">{% trans -%}This form has timed out. Please submit again to confirm{%- endtrans %}</p>
      </div>
    {%- endif %}
  </div>
</div>
{%- endmacro %}

{% macro renderform_inner(form, formid, style="horiz", autosave=false, draft_revision=none) -%}
  {% if message %}<p>{{ message }}</p>{% endif %}
  {# djlint:off #}<div style="display:none;">{# djlint:on #}<input type="hidden" name="form.id" value="{{ formid }}" /></div>
  {{ form.hidden_tag() }}
  {%- if autosave %}
    <input type="hidden" name="form.revision" value="{{ draft_revision if draft_revision is not none }}" />
  {%- endif %}
  {%- set autofocus = true %}
  {% set autofocus = namespace(val=true) %}
  {% for field in form -%}
    {%- if field.type in ['CSRFTokenField', 'HiddenField', 'NonceField'] -%}
      {# Don't show hidden #}
    {%- else -%}
      {{ renderfield(field, autofocus=autofocus.val, style=style) }}
      {%- if autofocus.val %}{% set autofocus.val = false %}{% endif %}
    {%- endif %}
  {% endfor %}
{%- endmacro %}

{# djlint: off #}{%- macro renderform(form, formid, submit, ref_id="form", message='', action=none, cancel_url='', multipart=false, style="", autosave=false, draft_revision=none) %}{# djlint: on #}
<form data-parsley-validate="true" id="{{ ref_id }}" method="post" {%- if action %} action="{{ action }}" {%- endif %}{%- if multipart %} enctype="multipart/form-data" {%- endif %} accept-charset="UTF-8" class="mui-form mui-form--margins hg-form {%- if style == 'horiz' %} mui-form--inline{% endif %}" {%- if request_wants.html_fragment and action %} hx-post="{{ action }}" {%- endif %}>
  {{ renderform_inner(form, formid or none, style=style, autosave=autosave, draft_revision=draft_revision) }}
  {{ rendersubmit([(none, submit or _("Submit"), 'mui-btn--primary')], cancel_url=cancel_url, style=style, csrf_error=form.csrf_token.errors if form.csrf_token else "") }}
</form>
{% endmacro %}

{%- macro ajaxform(ref_id, request, force=false) %}
  {%- if force or request_wants.html_fragment %}
    <script type="text/javascript">
      document.body.addEventListener('htmx:beforeSend', function(event) {
        window.Hasgeek.Forms.preventDoubleSubmit('{{ ref_id }}');
      });
      document.body.addEventListener('htmx:responseError', function(event) {
        var formId = '{{ ref_id }}'
        var alertBoxHtml = {{ alertbox('error', '') | tojson }};
        window.Hasgeek.Forms.showFormError(formId, event.detail.xhr, alertBoxHtml);
      });
    </script>
  {%- else %}
    <script type="text/javascript">
      $(function() {
        // Disable submit button when clicked. Prevent double click.
        $('#{{ ref_id }}').submit(function() {
          if(!$(this).data('parsley-validate') || $(this).data('parsley-validate') && $(this).hasClass('parsley-valid')) {
            $(this).find('button[type="submit"]').prop('disabled', true);
            $(this).find('input[type="submit"]').prop('disabled', true);
            $(this).find(".loading").removeClass('mui--hide');
          }
        });
      });
    </script>
  {%- endif %}
{%- endmacro %}
{%- macro recaptcha(formId, forWrapperId) %}
  <script type="text/javascript">
    var formId = "{{ formId }}";
    var forWrapperId = "{{ forWrapperId }}";
    window.onInvisibleRecaptchaSubmit = function (recaptcha_response) {
      var postUrl = $('#' + formId).attr('action');
      var onSuccess = function(responseData) {
        $('#' + forWrapperId).html(responseData);
      };
      var onError = function(response) {
        var alertBoxHtml = {{ alertbox('error', '') | tojson }};
        window.Hasgeek.Forms.showFormError(formId, response, alertBoxHtml);
      };
      window.Hasgeek.Forms.ajaxFormSubmit(
        formId,
        postUrl,
        onSuccess,
        onError,
        {
          dataType: 'html'
        }
      );
    };
    document.getElementById(formId).onsubmit = function (event) {
      event.preventDefault();
      grecaptcha.execute();
    };
  </script>
  <script type="text/javascript" src="https://www.google.com/recaptcha/api.js" async defer></script>
{%- endmacro %}

{%- macro map_marker_script(field) %}
  new window.Hasgeek.MapMarker({
    location_id: "{{ field.id }}_search",
    map_id: "{{ field.id }}_map",
    latitude_id: "{{ field.id }}_latitude",
    longitude_id: "{{ field.id }}_longitude",
    clear_id: "{{ field.id }}_clear"
  });
{% endmacro %}

{% macro widget_ext_scripts(form) %}
  {%- with scripts = {} %}
    {%- for field in form %}
      {%- if field.type == 'CoordinatesField' and config['GOOGLE_MAPS_API_KEY'] %}
        {#- We're using setdefault instead of a simple = because the do extension doesn't support assignment #}
        {%- do scripts.setdefault('gmap', ('https://maps.googleapis.com/maps/api/js?key=' + config['GOOGLE_MAPS_API_KEY'] + '&libraries=places')) %}
        {%- do scripts.setdefault('locationpicker', 'jquery.locationpicker.js'|ext_asset_url) %}
      {%- endif %}
    {%- endfor %}
    {%- for key in scripts %}
      <script type="text/javascript" src="{{ scripts[key] }}"></script>
    {%- endfor %}
  {%- endwith %}
{% endmacro %}

{% macro widgetscripts(form, script=true, ref_id="", force=false) -%}
  {%- if script %}
  <script type="text/javascript">
    $(function() {
  {%- endif %}

  $('.js-show-password').on('click', function (event) {
    event.preventDefault();
    $(this).parent().find('.js-password-toggle').toggleClass('mui--hide');
    $(this).parent().find('input').attr('type', 'text');
  });
  $('.js-hide-password').on('click', function (event) {
    event.preventDefault();
    $(this).parent().find('.js-password-toggle').toggleClass('mui--hide');
    $(this).parent().find('input').attr('type', 'password');
  });

  //Toggle between OTP/Password login
  $('.js-toggle-login').on('click', function(event) {
    event.preventDefault();
    if($(this).attr('id') == 'use-otp-login') {
      $('.js-password-field').find('input').val('');
    }
    $('.js-fields-toggle').toggleClass('mui--hide');
  });
  $('.js-password-field input').on('change', function() {
    if($('.js-password-field').hasClass('mui--hide')) {
      $('.js-fields-toggle').toggleClass('mui--hide');
    }
  });

  // Change username field input mode to tel
  if($('#username').length > 0) {
    $('#username').attr('inputmode', 'tel');
    $('#username').attr('autocomplete', 'tel');
    $('.js-keyboard-switcher').toggleClass('tabs__item--active');
  }

  // Add support to toggle username field input mode between tel & email to change keyboard in mobile
  $('.js-keyboard-switcher').on('click touchstart touchend', function(event) {
    event.preventDefault();
    var inputMode = $(this).data('inputmode');
    $('.js-keyboard-switcher').removeClass('tabs__item--active');
    $(this).addClass('tabs__item--active');
    $('#username').attr('inputmode', inputMode);
    $('#username').attr('autocomplete', inputMode);
  });

  {% if form and form.otp %}
    if ('OTPCredential' in window) {
      var formid = "#" + {{ ref_id|tojson }};
      var form = document.querySelector(formid);
      var inputField = formid + ' input[autocomplete="one-time-code"]'
      var input = document.querySelector(inputField);
      if (form && input) {
        var ac = new AbortController();
        form.addEventListener('submit', e => {
          ac.abort();
        });
        navigator.credentials.get({
          otp: { transport:['sms'] },
          signal: ac.signal
        }).then(otp => {
          input.value = otp.code;
          form.submit();
        }).catch(err => {
          console.log(err);
        });
      }
    }
  {%- endif -%}

  {%- for field in form -%}
    {%- if field.type == 'FormField' %}
      {{ widgetscripts(field.form, script=false) }}
    {%- elif field.type in ['AutocompleteField', 'AutocompleteMultipleField', 'ProfileSelectField'] %}
      Hasgeek.Forms.textAutocomplete({
        id: {{ field.id|tojson }},
        multiple: {{ field.multiple|tojson }},
        separator: {{ field.separator|tojson }},
        autocomplete_endpoint: {{ field.autocomplete_endpoint|tojson }},
        key: {{ field.results_key|tojson }}
      });
    {%- elif field.type == 'ImgeeField' %}
      window.addEventListener("message", function (event) {
        if (event.origin === "{{ config['IMGEE_HOST'] }}") {
          var message = JSON.parse(event.data);
          if (message.context == 'imgee.upload') {
            $('#imgee-loader-{{field.id}}').removeClass('mui--hide');
            $('#img_{{ field.id }}').attr('src', message.embed_url);
            $('#{{ field.id }}').val(message.embed_url);
            {%- if field.widget_type != 'modal' %}
              $.modal.close();
            {%- endif %}
          }
        }
      });
      $('#img_{{ field.id }}').on('load', function() {
        $('#imgee-loader-{{field.id}}').addClass('mui--hide');
      });
    {%- elif field.type in ['UserSelectField', 'UserSelectMultiField'] %}
      {%- if config['LASTUSER_CLIENT_ID'] and current_auth.cookie and 'sessionid' in current_auth.cookie %}
        Hasgeek.Forms.lastuserAutocomplete({
          id: {{ field.id|tojson }},
          multiple: {{ field.multiple|tojson }},
          separator: {{ field.separator|tojson }},
          autocomplete_endpoint: {{ field.autocomplete_endpoint|tojson }},
          getuser_endpoint: {{ field.getuser_endpoint|tojson }},
          client_id: {{ config['LASTUSER_CLIENT_ID']|tojson }},
          session_id: {{ current_auth.cookie['sessionid']|tojson }}
        });
      {%- else %}
        Hasgeek.Forms.lastuserAutocomplete({
          id: {{ field.id|tojson }},
          multiple: {{ field.multiple|tojson }},
          separator: {{ field.separator|tojson }},
          autocomplete_endpoint: {{ field.autocomplete_endpoint|tojson }},
          getuser_endpoint: {{ field.getuser_endpoint|tojson }}
        });
      {%- endif %}
    {%- elif field.type in ['GeonameSelectField', 'GeonameSelectMultiField'] %}
      activate_geoname_autocomplete({{ ('#'+field.id)|tojson }}, {{ field.autocomplete_endpoint|tojson }}, {{ field.getname_endpoint|tojson }}, {{ field.separator|tojson }});
    {%- elif field.type == 'CoordinatesField' -%}
      {{ map_marker_script(field) }}
    {%- endif -%}
  {%- endfor -%}
  {%- if script %}
    });
  </script>
  {%- endif -%}
{% endmacro %}
