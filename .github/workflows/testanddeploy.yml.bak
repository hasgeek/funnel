name: test-and-deploy-to-staging-pipeline

on:
  push:
    branches: [aws]
  pull_request:
    branches: [aws]

jobs:
  test:
    runs-on: ubuntu-latest

    container:
      image: lucasalt/act_base:latest

    steps:
      - uses: actions/checkout@v2
        with:
          ref: aws

      - name: Create env file
        run: |
          touch instance/settings.py
          export GOOGLE_MAPS_API_KEY='${{ secrets.GOOGLE_MAPS_API_KEY }}'
          export YOUTUBE_API_KEY='${{ secrets.YOUTUBE_API_KEY }}'
          export SMS_TWILIO_SID='${{ secrets.SMS_TWILIO_SID }}'
          export SMS_TWILIO_TOKEN='${{ secrets.SMS_TWILIO_TOKEN }}'
          export SMS_TWILIO_FROM='${{ secrets.SMS_TWILIO_FROM }}'
          export VIMEO_CLIENT_ID='${{ secrets.VIMEO_CLIENT_ID }}'
          export VIMEO_CLIENT_SECRET='${{ secrets.VIMEO_CLIENT_SECRET }}'
          export VIMEO_ACCESS_TOKEN='${{ secrets.VIMEO_ACCESS_TOKEN }}'
          echo "${{ secrets.SERVER_ENV_TEST }}" > instance/settings.py

      - name: Copy requirements file
        run: |
          cat requirements_test.txt > requirements.txt
          cat requirements.txt

      - name: Run Docker Compose using the docker-compose.ci.yml file
        run: |
          echo --- Building only web first ---
          docker-compose -f docker-compose.ci.yml build --no-cache web
          echo --- Starting up all the containers ---
          docker-compose -f docker-compose.ci.yml up --build --exit-code-from web
          echo --- Completed test cases ---

  build:
    needs: test

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: aws

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/funnel:latest

  deploy:
    needs: build

    runs-on: ubuntu-latest

    steps:
      - name: deploying via ssh
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEV_HOST_IP }}
          username: ec2-user
          key: ${{ secrets.DEV_SSH_KEY }}
          port: 22
          script: |
            echo 'pruning unused docker images'
            docker image prune -f
            #echo 'changing folder to funnel'
            cd funnel
            echo 'docker-compose down'
            docker-compose down
            echo 'fetching git repo'
            git fetch origin aws
            echo 'reset git repo'
            git reset --hard origin/aws  &&  echo 'git fetched and hard reset'
            echo 'fetching settings.py from github secrets'
            #aws s3 cp s3://v2-alpha-test-environment-files/container_env instance/settings.py
            echo "${{ secrets.SERVER_ENV_DEV }}" > instance/settings.py
            ls instance
            cat instance/settings.py
            #docker run --mount src="instance",target=/app/instance:Z,type=bind vivekdurai/funnel flask db upgrade
            echo 'starting docker-compose'
            docker-compose -f docker-compose.staging.yml up -d
