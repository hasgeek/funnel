name: 'Pytest on docker'

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']
    paths:
      - '**.py'
      - '**.js'
      - '**.scss'
      - '**.jinja2'
      - 'requirements/base.txt'
      - 'requirements/test.txt'
      - '.github/workflows/docker-ci-tests.yml'
      - 'Dockerfile'
      - 'docker-compose.yml'
      - 'package.json'
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Cache .funnel-pip-cache
        uses: actions/cache@v3
        with:
          path: ../.funnel-pip-cache
          key: ${{ runner.os }}-pip-cache
          restore-keys: |
            ${{ runner.os }}-pip-cache
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build funnel-test image
        uses: docker/build-push-action@v4
        with:
          context: .
          load: true
          push: false
          target: test
          tags: funnel-test:latest
          # https://docs.docker.com/build/ci/github-actions/cache/#local-cache
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
      - # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
        name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      - name: Run Tests
        run: |
          make docker-ci-test
      - name: Upload coverage report to Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.github_token }}
          path-to-lcov: ./coverage/funnel.lcov
          flag-name: docker
          parallel: true
